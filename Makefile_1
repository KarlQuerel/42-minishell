# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: casomarr <casomarr@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/09/13 17:01:08 by carolina          #+#    #+#              #
#    Updated: 2023/10/23 19:00:14 by casomarr         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

.DEFAULT_GOAL := all
#je ne me souviens pas Ã  quoi servait la ligne au dessus. Tester sans.

#------------------------------------------------#
#   COLORS                                       #
#------------------------------------------------#
GREEN			= '\033[0;32m'
RESET_COLOR		= '\033[0m'


NAME        := minishell

#------------------------------------------------#
#   DEFINITIONS                                  #
#------------------------------------------------#
# SRC_DIR   source directory
# OBJ_DIR   object directory
# SRCS      source files
# OBJS      object files
#
# CC        compiler
# CFLAGS    compiler flags
# CPPFLAGS  preprocessor flags
# DIR_DUP   duplicate directory tree

SRC_DIR		:= src
OBJ_DIR		:= obj
SRCS		:=  src/main.c \
				src/parsing/commands.c \
				src/parsing/parsing.c \
				src/parsing/checks.c \
				src/parsing/signal.c \
				src/parsing/env_list.c \
				src/parsing/lstnew.c \
				src/parsing/free.c \
				src/executable/exec.c \
				src/executable/exec_utils.c \
				src/executable/exec_errors.c \
				src/executable/redirect.c \
				src/executable/pipes.c \
				src/builtins/cd.c \
				src/builtins/dollar.c \
				src/builtins/echo.c \
				src/builtins/env.c \
				src/builtins/export.c \
				src/builtins/history.c \
				src/builtins/pwd.c \
				src/builtins/unset.c \
				src/parsing/errors.c \
				src/parsing/utils.c \
				src/parsing/malloc.c \
				src/parsing/cmd_types.c \
				src/parsing/prompt.c
SRCS		:= $(SRCS:%=$(SRC_DIR)/%)
OBJS		:= $(SRCS:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

CC			:= cc
CFLAGS		:= -Wall -Wextra -Werror
#CFLAGS		:= -gdwarf-4
CPPFLAGS	:= -I include
MAKEFLAGS	+= --no-print-directory
DIR_DUP     = mkdir -p $(@D)

PATH_LIBFT = "libft"
LIBFT = $(PATH_LIBFT)/libft.a

#------------------------------------------------#
#   MAKE                                         #
#------------------------------------------------#
# all       default goal
# $(NAME)   linking .o -> binary
# %.o       compilation .c -> .o

all: $(NAME) $(LIBFT)
	@toilet COMPILED -F border -f wideterm

# $(LIBFT):
# 	@toilet LIBFT -F border -f wideterm
# 	@make -C $(PATH_LIBFT)
	
$(NAME): $(OBJS) $(LIBFT)
	@toilet MINISHELL -F border -f wideterm
	$(CC) $(OBJS) -o $(NAME) $(LIBFT) -lreadline
# $(info CREATED $(NAME))

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(HEADER)
	$(DIR_DUP)
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<
# $(info CREATED $@)

#------------------------------------------------#
#   CLEAN, RE AND PHONY                          #
#------------------------------------------------#
# RM        force remove
# clean     remove .o
# fclean    remove .o + binary
# re        remake default goal

RM          := rm -f

clean:
	@toilet CLEAN -F border -f wideterm
	$(RM) $(OBJS)
	make clean -C $(PATH_LIBFT)

fclean: clean
	@toilet FCLEAN -F border -f wideterm
	$(RM) $(NAME)
	make fclean -C $(PATH_LIBFT)

re:
	$(MAKE) fclean
	$(MAKE) all

.PHONY: all clean fclean re